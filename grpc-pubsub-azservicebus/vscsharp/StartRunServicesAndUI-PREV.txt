ACTIONS to prepare the Visual Studio solution for running serviceA, serviceB, and the QuickTestClient.

1. Start Visual Studio.  Then open the DiscoverDapr folder on your machine that you cloned from GitHub.
2. In the Visual Studio Solution Explorer, navigate to the grpc-pubsub-azservicebus\vscsharp folder.
3. Open the grpc-pubsub-azservicebus solution by double clicking on the .sln file icon shown in the Solution Explorer.
4. It is best to rebuild the entire solution before running any of the above services, just to prevent wasting time
   by having to chase down inconsistences.  Before each test run open the VS Build menu in the menu bar at the
   top of the display, and click Rebuild Solution.
5. Now you are ready to do any, or all, of the following ACTIONS.




ACTIONS to start and run ServiceA and its Dapr sidecar.
	Dapr starts ServiceA via dotnet run (with implicit "." for current directory).

Open a Windows Terminal Command Prompt window or Windows Command Prompt window.  Input the following commands. Best to do
this one-by-one at first by copying a single command line from this file.  Paste it in to the Command Prompt window.  Press Enter.
NOTE you need a SEPARATE COMMAND PROMPT WINDOW for each service and the QuickTestClient!

cd LocalRepoPathPrefix\DiscoverDapr\grpc-pubsub-azservicebus\Services\ServiceA
dapr run --app-id ServiceA dotnet run




ACTIONS to start and run ServiceB and its Dapr sidecar.
	Dapr starts ServiceB via dotnet run (with implicit "." for current directory).


Open a 2nd separate Windows Terminal Command Prompt window or Windows Command Prompt window.  Input the following commands. 
Best to do this one-by-one at first by copying a single command line from this file. Then Paste it in to the Command Prompt window.
Press Enter.  NOTE you need a SEPARATE COMMAND PROMPT WINDOW for each service and the QuickTestClient!

cd LocalRepoPathPrefix\DiscoverDapr\grpc-pubsub-azservicebus\Services\ServiceB
dapr run --app-id ServiceB --app-port 5050 --app-protocol grpc dotnet run




ACTIONS to start and run the QuickTestClient. NOTE you need a SEPARATE COMMAND PROMPT WINDOW for each service and the QuickTestClient!

1. In the Visual Studio Solution Explorer, navigate to the grpc-pubsub-azservicebus\vscsharp folder.
2. Open the grpc-pubsub-azservicebus solution by double clicking on the .sln file icon.
3. Find the QuickTestClient project and hover your mouse cursor on it.
   a. Right click this project symbol to make a context menu pop up.  
   b. Hover your mouse cursor over the Debug context menu item.  
   c. Click on Start New Instance and the Quick Test Client will start and display its own Command Prompt window.




ACTIONS to input commands into the QuickTestClient command window that will cause it to publish an event to ServiceA which will enqueue one or more items into your Azure Service Bus svcADemoEvent1 Topic.

Note:  The payload must always be a string since this is a minimal implementation no DTOs are used! Also note that the QuickTestClient
       automagically prepends a 9 character "SenderSequeuceNumber" to each payload string.  This allows the output
	   of the receiving service to be inspected to find missing messages, a BAD BUG!  But, the SenderSequenceNumber is only
	   prepended to the multi-event publish command.

1. The below QuickTestClient UI command publishes a SINGLE message, WITHOUT a SenderSequenceNumber. Best to do
this by copying a single UI command line from this file.  Paste it in to the Command Prompt window.  Press Enter.

	a-pubevent daprpubsub svs-pubsub-asbtopic svcADemoEvent1 payload=tttttt



2. The below QuickTestClient UI command publishes MULTIPLE messages, WITH a SenderSequenceNumber. Best to do
this by copying a single UI command line from this file.  Paste it in to the Command Prompt window.  Press Enter.

	a-pubeventmulti daprpubsub svs-pubsub-asbtopic svcADemoEvent1 payload=tttttt 10 1000

	The two numbers at the right end of the command line are 10 for EventCount to publish, and
	1000 for NumberOfMillisecondsToDelay between event publications.

Please see the source code of the QuickTestClient for the meaning of all other command arguments.  However, with the
way this solution is set up these args CANNOT BE CHANGED:  daprpubsub svs-pubsub-asbtopic svcADemoEvent1.  Changing
them in any way is a breaking change and will cause an error.


