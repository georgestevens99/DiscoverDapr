# Default values for blog-testsys.
# This is a YAML-formatted file.  Initially generated by helm create blog-testsys command
# Declare variables to be passed into your templates.

# global config
global:
  env:
    "ASPNETCORE_URLS": "http://+:80"

# app-servicea config
app-servicea:
  replicaCount: 1

  image:
    repository: app-servicea-demo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  command: ["dotnet", "AppServiceA.dll"]

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  daprAnnotations:
    enabled: true
    appPort: 3500 #This is the app-port that dapr listens to. 3500 is the default I think, but not sure.
    appProtocol: http #This is for the service-to-dapr protocol over the app-port.  Defaults to "http".
    logLevel: debug #debug, info, error, warning.  Most to least verbose.

  podAnnotations: {} 

  podSecurityContext: {}

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
 
  service:
    type: NodePort
    port: 80
    targetPort: 80
    nodePort: 30001 # app-servicea will be exposed externally to the cluster at http://localhost:30001

  ingress:
    enabled: false

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
  #  minReplicas: 1
  #  maxReplicas: 100
  #  targetCPUUtilizationPercentage: 80
  #  # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {} 
  
# app-serviceb config
app-serviceb:
  replicaCount: 1

  image:
    repository: app-serviceb-demo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  command: ["dotnet", "AppServiceB.dll"]

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  daprAnnotations:
    enabled: true
    appPort: 5050 # ServiceB Program.cs defines 5050 as a http2 port that Dapr listens to.
    appProtocol: grpc #This is for the service-to-dapr protocol over the app-port.  Defaults to "http".
    logLevel: debug #debug, info, error, warning.  Most to least verbose.

  podAnnotations: {}
  
  podSecurityContext: {}
   
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: NodePort
    port: 80   
    targetPort: 80
    nodePort: 30002 # app-serviceb will be exposed externally to the cluster at http://localhost:30002

  ingress:
    enabled: false

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
  #  minReplicas: 1
  #  maxReplicas: 100
  #  targetCPUUtilizationPercentage: 80
  #  # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}  
